(()=>{"use strict";var t;!function(t){t.name="name",t.image="image",t.status="status",t.species="species",t.type="type",t.origin="origin",t.episode="episode"}(t||(t={}));class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys({name:null,image:null,status:null,species:null,type:null,origin:null,episode:null})}attributeChangedCallback(t,e,n){this[t]=n,this.render()}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n\n\n  <section>\n  <h1>${this.name}</h1>\n  <img src='${this.image}'></img>\n  <h3>${this.status}</h3>\n  <h3>${this.species}</h3>\n  <h3>${this.type}</h3>\n  <h4>${this.origin}</h4>\n  <h4>${this.episode}</h4>\n  </section>`)}}customElements.define("my-character",e);var n=function(t,e,n,i){return new(n||(n=Promise))((function(s,o){function r(t){try{c(i.next(t))}catch(t){o(t)}}function a(t){try{c(i.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,a)}c((i=i.apply(t,e||[])).next())}))};class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){return n(this,void 0,void 0,(function*(){this.renderInput()}))}getFirstEpisode(t){return n(this,void 0,void 0,(function*(){try{return(yield fetch(t).then((t=>t.json()))).name}catch(t){return console.log(t),"error"}}))}renderInput(){this.shadowRoot&&(this.shadowRoot.innerHTML+='\n<section id="input">\n<p>Number of Characters:</p>\n<input type="number" id="enter" name="enter">\n<button id="DoneButton">Done</button>\n</section>\n',this.shadowRoot.querySelector("#DoneButton"))}render(t){this.shadowRoot&&(this.shadowRoot.innerHTML+=`\n\t\t\t<section><my-character name='${t.name}'\n\t\t\timage='${t.image}'\n\t\t\tstatus='${t.status}'\n\t\t\tspecies='${t.species}'\n\t\t\ttype='${t.type||"not found"}'\n\t\t\torigin='${t.origin.name}'\n\t\t\tepisode='${t.firstepisodename}'>\n\t\t\t</my-character>`)}}customElements.define("app-container",i)})();